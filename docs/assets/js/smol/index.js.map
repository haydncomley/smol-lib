{
  "version": 3,
  "sources": ["../src/r/state.ts", "../src/r/rendering.ts", "../src/r/component.ts"],
  "sourcesContent": ["export function isSmolValue(object: unknown): object is SmolValue<unknown> {\n    if(typeof object !== 'object' || !object) return false;\n\n    if('get' in object) {\n        return true;\n    }\n\n    return false;\n}\n\nexport interface SmolValue<T> {\n    index: number;\n    deps: SmolValue<T>[];\n    get(): T;\n    runs?: number;\n}\n\nexport interface State {\n    root: HTMLElement;\n    seed: number;\n    values: SmolValue<unknown>[];\n    bindings: Record<string, SmolValue<unknown>>;\n    onChange: (updatedIndex: SmolValue<unknown>) => void;\n}\n\nexport interface GlobalState { [key: string]: SmolValue<unknown>[] }\n\nexport function setupState(component: HTMLElement, changeCallback: State['onChange']) {\n    const state: State = {\n        root: component,\n        seed: 0,\n        values: [],\n        bindings: {},\n        onChange: changeCallback\n    };\n\n    \n    window['smol-last-state'] = state;\n    if (!window['smol-global-state']) window['smol-global-state'] = {};\n    if (!window['smol-global-comsumers']) window['smol-global-comsumers'] = { seed: 0 }\n    return state;\n}\n\nexport function value<T>(initialValue: T) {\n    const state = window['smol-last-state'] as State;\n    const index = state.seed++;\n    const exists = state.values[index] as SmolValue<T> | undefined;\n\n    let internalValue = !exists ? initialValue : exists.get();\n\n    const internal = {\n        index,\n        deps: [],\n        get: (): T => internalValue,\n        set: (val: T) => {\n            internalValue = val;\n            state.onChange(internal);\n            state.values\n                .filter(v => v.deps.find((x) => x.index === index))\n                .forEach(b => state.onChange(b));\n        }\n    };\n\n    if (!exists) state.values.push(internal);\n    else state.values[index] = internal;\n\n    return internal;\n}\n\nexport function compute<T>(transform: () => T, dependencies: SmolValue<T>[] = []) {\n    const state = window['smol-last-state'] as State;\n    const index = state.seed++;\n    const exists = state.values[index] as SmolValue<T> | undefined;\n\n    const internal = {\n        index,\n        runs: exists?.runs ?? 0,\n        deps: dependencies,\n        get: (): T => {\n            state.values[index].runs = (state.values[index].runs ?? 0) + 1;\n            return transform();\n        },\n    };\n\n    if (!exists) state.values.push(internal);\n    else state.values[index] = internal;\n\n    return internal;\n}\n\nexport function sharedValue<T>(key: string, initialValue: T) {\n    const globalState = window['smol-global-state'];\n    const globalExists = globalState[key] as SmolValue<T> | undefined;\n\n    let internalValue = !globalExists ? initialValue : globalExists.get();\n    const localValue = value(internalValue);\n\n    if(!globalExists) {\n        globalState[key] = {\n            index: 0,\n            deps: [],\n            get: (): T => internalValue,\n            set: (val: T) => {\n                internalValue = val;\n                console.log('setting global value', key, val);\n                globalState[key].deps.forEach((dep) => (dep as any).set(val));\n            }\n        } as SmolValue<T>\n    };\n\n    globalState[key].deps.push(localValue);\n\n    return globalState[key];\n}", "import { SmolValue, State, isSmolValue } from \"./state\";\n\nexport function render(template: TemplateStringsArray, ...args: (unknown | SmolValue<unknown>)[]) {\n    const renderTemplate = () => {\n        let string = '';\n\n        template.forEach((block, index) => {\n            const nextVar = args[index];\n            string += block;\n            if (nextVar === undefined) return;\n            string += isSmolValue(nextVar) ? nextVar.get() : String(nextVar);\n        });\n\n        return string;\n    }\n\n    return renderTemplate;\n}\n\nexport function element(): HTMLElement {\n    const state: State = window['smol-last-state'];\n    return state?.root;\n}", "import { element, render } from \"./rendering\";\nimport { SmolValue, State, compute, setupState, value } from \"./state\";\n\nexport class Component extends HTMLElement {\n    renderFunc: () => string;\n    isDirty: SmolValue<unknown>[] = [];\n    root = this;\n\n    constructor(func: () => ReturnType<typeof render>) {\n        super();\n        // this.root = this.attachShadow({ mode: 'open' }) as any;\n\n        const state = setupState(this, (val) => {\n            window['smol-last-state'] = state;\n            window['smol-global-comsumers'].seed = 0;\n            state.seed = 0;\n\n            if (this.isDirty.length === 0) {\n                requestAnimationFrame(() => {\n                    // this.isDirty.forEach((dirtyVal) => dirtyVal.get());\n                    this.doRender();\n                    this.isDirty = [];\n                    state.values\n                        .filter((val) => typeof val.runs !== 'undefined')\n                        .filter((val) => val.deps.length === 0)\n                        .forEach((val) => val.get());\n                });\n            }\n            this.isDirty.push(val);\n        });\n        this.renderFunc = func();\n        this.doRender();\n        state.values.forEach((val) => {\n            if (val.runs === 0) val.get();\n        })\n    }\n\n    doRender() {\n        const s = this.renderFunc();\n        const div = document.createElement('div');\n        div.innerHTML = s;\n        const persistElementsOld = Array.from(this.querySelectorAll('[data-persist]'))\n        const persistElementsNew = Array.from(div.querySelectorAll('[data-persist]'))\n        const refocusElement = document.activeElement;\n\n        persistElementsNew.forEach((newElement) => {\n            const oldElement = persistElementsOld.find((oldElement) => oldElement.getAttribute('data-persist') === newElement.getAttribute('data-persist'));\n            if (oldElement) {\n                newElement.replaceWith(oldElement);\n            }\n        });\n\n        this.root.replaceChildren(...div.children as any);\n        if(refocusElement) (refocusElement as any)?.focus();\n    }\n}\n\nexport function component(tag: string, func: () => ReturnType<typeof render>) {\n    if (customElements.get(tag)) {\n        console.warn(`Component with tag '${tag}' is already defined.`);\n        return;\n    }\n\n    customElements.define(tag, class extends Component {\n        constructor() {\n            super(func);\n        }\n    });\n}\n\nexport function listen<T extends Event>(selector: string, event: string, callback: (event: T) => void) {\n    const rootElement = element();\n    compute(() => {\n        const element = rootElement.querySelector(selector);\n        if(element) element.addEventListener(event, callback as any);\n        else console.warn(`Could not find element with selector '${selector}'`);\n    });\n}\n\nexport function bind(selector: string, key: string, val: SmolValue<unknown>) {\n    const rootElement = element();\n    compute(() => {\n        const element = rootElement.querySelector(selector);\n        if(element) element[key] = val.get();\n        else console.warn(`Could not find element with selector '${selector}'`);\n    }, [val]);\n}\n\nexport function input(selector: string, val: SmolValue<unknown>, callback?: () => void) {\n    bind(selector, 'value', val);\n    listen(selector, 'input', (e) => {\n        (val as any).set((e.target as any).value);\n        if (callback) callback();\n    });\n}\n\nexport function provide<T>(key: string, val: SmolValue<T>) {\n    const rootElement = element();\n    if (!rootElement['smol-provide-state']) rootElement['smol-provide-state'] = {};\n    rootElement['smol-provide-state'][key] = val;\n}\n\n\nexport function consume<T>(key: string): SmolValue<T> {\n    const localKey = `consumer-key-${key}-${window['smol-global-comsumers'].seed++}`;\n\n    const checkParent = (element: HTMLElement) => {\n        if (element['smol-provide-state']) {\n            return element['smol-provide-state'][key];\n        } else if (element.parentElement) {\n            return checkParent(element.parentElement);\n        }\n    }\n\n    \n    const root = element();\n    const val = checkParent(root);\n    window['smol-global-comsumers'][localKey] = val?.get() || window['smol-global-comsumers'][localKey];\n    const localVal = value<T>(window['smol-global-comsumers'][localKey] as T);\n\n    setTimeout(() => {\n        const val = checkParent(root);\n        window['smol-global-comsumers'][localKey] = val.get();\n        localVal.set(window['smol-global-comsumers'][localKey] as T);\n    })\n\n    return localVal;\n}"],
  "mappings": "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",
  "names": ["component", "val", "oldElement", "element"]
}
